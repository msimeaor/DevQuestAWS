name: Continuous Integration and Delivery with Github Actions

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_ACCESS_TOKEN}}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Setup Java 21
      uses: actions/setup-java@v2
      with:
        java-version: 21
        distribution: 'temurin'

    - name: Building application .jar
      env:
        TOKEN_JWT_SECRETKEY: ${{secrets.TOKEN_JWT_SECRETKEY}}
        TOKEN_JWT_EXPIRELENGTH: ${{secrets.TOKEN_JWT_EXPIRELENGTH}}
        SPRING_AI_OPENAI_API_KEY: ${{secrets.SPRING_AI_OPENAI_API_KEY}}
      working-directory: ./
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: ./
      run: docker compose build

    - name: Tag and Push Docker Image to Amazon Container Registry - ECR
      run: |
        docker tag ${{secrets.DOCKER_USERNAME}}/devquest-aws:latest ${{secrets.AWS_IMAGE_REPO_URL}}:latest
        docker tag ${{secrets.DOCKER_USERNAME}}/devquest-aws:latest ${{secrets.AWS_IMAGE_REPO_URL}}:${{github.run_id}}
        
        docker push ${{secrets.AWS_IMAGE_REPO_URL}}:latest
        docker push ${{secrets.AWS_IMAGE_REPO_URL}}:${{github.run_id}}

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{secrets.AWS_TASK_DEFINITION_NAME}} --query taskDefinition > task-definition.json
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{secrets.AWS_CONTAINER_NAME}}
        image: ${{secrets.AWS_IMAGE_REPO_URL}}:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{secrets.AWS_SERVICE_NAME}}
        cluster: ${{secrets.AWS_CLUSTER_NAME}}
        wait-for-service-stability: true

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{secrets.DOCKER_USERNAME}}/devquest-aws:latest ${{secrets.DOCKER_USERNAME}}/devquest-aws:${{github.run_id}}
        docker push ${{secrets.DOCKER_USERNAME}}/devquest-aws:latest
        docker push ${{secrets.DOCKER_USERNAME}}/devquest-aws:${{github.run_id}}
