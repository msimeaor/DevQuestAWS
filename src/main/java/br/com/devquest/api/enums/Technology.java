package br.com.devquest.api.enums;

import lombok.Getter;

@Getter
public enum Technology {

  JAVA("JAVA"), JAVASCRIPT("JAVASCRIPT"), PYTHON("PYTHON"),
  C_SHARP("C#"), PHP("PHP"), C_PLUS_PLUS("C++"),
  RUBY("RUBY"), KOTLIN("KOTLIN"), SWIFT("SWIFT"),
  GO("GO"), RUST("RUST"), SCALA("SCALA"),
  PERL("PERL"), TYPESCRIPT("TYPESCRIPT"), SQL("SQL"),
  HTML("HTML"), CSS("CSS"), BASH("BASH"),
  SHELL("SHELL"), POWERSHELL("POWERSHELL"), MATLAB("MATLAB"),
  HASKELL("HASKELL"), LUA("LUA"), OBJECTIVE_C("OBJECTIVE-C"),
  DART("DART"), GROOVY("GROOVY"), ASSEMBLY("ASSEMBLY"),
  FORTRAN("FORTRAN"), COBOL("COBOL"), R("R"),
  VHDL("VHDL"), VERILOG("VERILOG"), JSON("JSON"),
  XML("XML"), YAML("YAML"), DOCKER("DOCKER"),
  KUBERNETES("KUBERNETES"), ANSIBLE("ANSIBLE"), CHEF("CHEF"),
  PUPPET("PUPPET"), TERRAFORM("TERRAFORM"), AWS("AWS"),
  AZURE("AZURE"), GCP("GCP"), SPRING("SPRING"),
  SPRING_BOOT("SPRING BOOT"), HIBERNATE("HIBERNATE"), JPA("JPA"),
  NODE_JS("NODE.JS"), REACT("REACT"), ANGULAR("ANGULAR"),
  VUE_JS("VUE.JS"), NEXT_JS("NEXT.JS"), NEST_JS("NEST.JS"),
  FLUTTER("FLUTTER"), REACT_NATIVE("REACT NATIVE"), IONIC("IONIC"),
  DJANGO("DJANGO"), FLASK("FLASK"), RUBY_ON_RAILS("RUBY ON RAILS"),
  LARAVEL("LARAVEL"), CODEIGNITER("CODEIGNITER"), EXPRESS("EXPRESS"),
  ASP_NET("ASP.NET"), UNITY("UNITY"), UNREAL_ENGINE("UNREAL ENGINE"),
  BLENDER("BLENDER"), GODOT("GODOT"), CRYENGINE("CRYENGINE"),
  OPENCV("OPENCV"), TENSORFLOW("TENSORFLOW"), PYTORCH("PYTORCH"),
  SCIKIT_LEARN("SCIKIT-LEARN"), NUMPY("NUMPY"), PANDAS("PANDAS"),
  MATPLOTLIB("MATPLOTLIB"), SEABORN("SEABORN"), KERAS("KERAS"),
  OPENAI("OPENAI"), HUGGING_FACE("HUGGING FACE"), ELASTICSEARCH("ELASTICSEARCH"),
  KIBANA("KIBANA"), LOGSTASH("LOGSTASH"), APACHE_SPARK("APACHE SPARK"),
  HADOOP("HADOOP"), BIGQUERY("BIGQUERY"), TABLEAU("TABLEAU"),
  POWER_BI("POWER BI"), QLIKVIEW("QLIKVIEW"), LOOKER("LOOKER"),
  MYSQL("MYSQL"), POSTGRESQL("POSTGRESQL"), MONGODB("MONGODB"),
  SQLITE("SQLITE"), ORACLE("ORACLE"), SQL_SERVER("SQL SERVER"),
  REDIS("REDIS"), CASSANDRA("CASSANDRA"), COUCHDB("COUCHDB"),
  COUCHBASE("COUCHBASE"), INFLUXDB("INFLUXDB"), GRAPHQL("GRAPHQL"),
  REST_API("REST API"), SOAP("SOAP"), GRPC("GRPC"),
  WEBPACK("WEBPACK"), BABEL("BABEL"), ROLLUP("ROLLUP"),
  PARCEL("PARCEL"), SASS("SASS"), LESS("LESS"),
  TAILWIND_CSS("TAILWIND CSS"), BOOTSTRAP("BOOTSTRAP"), MATERIAL_UI("MATERIAL UI"),
  ANT_DESIGN("ANT DESIGN"), FOUNDATION("FOUNDATION"), ZURB("ZURB"),
  ECLIPSE("ECLIPSE"), INTELLIJ("INTELLIJ"), VISUAL_STUDIO("VISUAL STUDIO"),
  VS_CODE("VS CODE"), ANDROID_STUDIO("ANDROID STUDIO"), XCODE("XCODE"), JIRA("JIRA"),
  CONFLUENCE("CONFLUENCE"), SLACK("SLACK"), TRELLO("TRELLO"),
  NOTION("NOTION"), GIT("GIT"), GITHUB("GITHUB"),
  GITLAB("GITLAB"), BITBUCKET("BITBUCKET"), SVN("SVN"),
  MERCURIAL("MERCURIAL"), FIGMA("FIGMA"), ADOBE_XD("ADOBE XD"),
  SKETCH("SKETCH"), ZEPLIN("ZEPLIN"), INVISION("INVISION"),
  CI_CD("CI/CD"), JENKINS("JENKINS"), TRAVIS_CI("TRAVIS CI"),
  CIRCLE_CI("CIRCLE CI"), GITHUB_ACTIONS("GITHUB ACTIONS"), BITRISE("BITRISE"),
  ARGO_CD("ARGO CD"), PROMETHEUS("PROMETHEUS"), GRAFANA("GRAFANA"),
  ZABBIX("ZABBIX"), NAGIOS("NAGIOS"), SPLUNK("SPLUNK"),
  NEW_RELIC("NEW RELIC"), POSTMAN("POSTMAN"), SOAP_UI("SOAP UI"),
  JMETER("JMETER"), SELENIUM("SELENIUM"), APPIUM("APPIUM"),
  CYPRESS("CYPRESS"), PLAYWRIGHT("PLAYWRIGHT"), TESTNG("TESTNG"), JUNIT("JUNIT"),
  MOCHA("MOCHA"), CHAI("CHAI"), JEST("JEST"),
  CUCUMBER("CUCUMBER"), KARMA("KARMA"), PROTRACTOR("PROTRACTOR"),
  WEB3_JS("WEB3.JS"), ETHERS_JS("ETHERS.JS"), SOLIDITY("SOLIDITY"),
  TRUFFLE("TRUFFLE"), HARDHAT("HARDHAT"), GANACHE("GANACHE"),
  METAMASK("METAMASK"), VERCEL("VERCEL"), NETLIFY("NETLIFY"), HEROKU("HEROKU"), DIGITAL_OCEAN("DIGITAL OCEAN"),
  LINODE("LINODE"), VULTR("VULTR"), FIREBASE("FIREBASE"),
  SUPABASE("SUPABASE"), BACK4APP("BACK4APP"), STRAPI("STRAPI"),
  CONTENTFUL("CONTENTFUL"), WORDPRESS("WORDPRESS"), DRUPAL("DRUPAL"),
  JOOMLA("JOOMLA"), MAGENTO("MAGENTO"), SHOPIFY("SHOPIFY"),
  REST("REST"), SOA("SOA"),
  OAUTH2("OAuth 2.0"),
  OPENID_CONNECT("OpenID Connect"), API_GATEWAY("API Gateway"), SWAGGER("Swagger");

  private final String technology;

  Technology(String technology) {
    this.technology = technology;
  }

  public Technology getTechnologyByString(String technologyString) {
    for (Technology t : Technology.values())
      if (t.getTechnology().equalsIgnoreCase(technologyString)) return t;

    throw new IllegalArgumentException("Tecnologia n√£o encontrada!");
  }

}
